name: Terraform Configuration Run
on:
  workflow_call:
    inputs:
      tf_version:
        required: false
        type: string
        default: "~> 1.0.0"
    secrets:
      tfe_token:
        required: false
        type: string
        default: ${{ secrets.TF_API_TOKEN }}

jobs:
  terraform_run:
    runs-on: ubuntu-latest
    name: Terraform Plan
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.tfe_token }}
    - name: Terrform Init
      id: tf_init
      run: terraform init

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color

    # - run: echo ${{ steps.plan.outputs.stdout }}
    # - run: echo ${{ steps.plan.outputs.stderr }}
    # - run: echo ${{ steps.plan.outputs.exitcode }}

    - name: Inspect plan results
      id: inspect
      uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Terraform Apply
      id: apply
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve
